import SearchHeader from "./components/SearchHeader";
import SearchSidebar from "./components/SearchSidebar";
import SearchCard from "./components/SearchCard";
import { PRICE, PrismaClient } from "@prisma/client";
import { Metadata } from "next";

export const metadata: Metadata = {
  title: "search",
  description: "Generated by create next app",
  keywords: ["aryan", "page"],
};

const prisma = new PrismaClient();

interface searchParams {
  city?: string;
  region?: string;
  price?: PRICE;
}

const fetchRestaurant = (searchParams: searchParams) => {
  const where: any = {};

  if (searchParams.city) {
    const location = {
      name: {
        equals: searchParams.city.toLocaleLowerCase(),
      },
    };
    where.location = location;
  }

  if (searchParams.region) {
    const region = {
      name: {
        equals: searchParams.region.toLocaleLowerCase(),
      },
    };
    where.region = region;
  }

  if (searchParams.price) {
    const price = {
      equals: searchParams.price,
    };
    where.price = price;
  }

  const select = {
    id: true,
    name: true,
    main_image: true,
    price: true,
    location: true,
    region: true,
    slug: true,
    reviews: true,
  };

  return prisma.restaurant.findMany({
    where,
    select,
  });
};

const fetchLocations = () => {
  return prisma.location.findMany();
};

const fetchRegions = () => {
  return prisma.region.findMany();
};

export default async function page({
  searchParams,
}: {
  searchParams: searchParams;
}) {
  const restaurants = await fetchRestaurant(searchParams);
  const locations = await fetchLocations();
  const regions = await fetchRegions();

  return (
    <>
      <SearchHeader />
      <div className="flex py-4 m-auto w-2/3 justify-between items-start">
        <SearchSidebar
          locations={locations}
          regions={regions}
          searchParams={searchParams}
        />
        <div className="w-5/6">
          {restaurants.length ? (
            restaurants.map((restaurant) => (
              <SearchCard restaurant={restaurant} />
            ))
          ) : (
            <p>Sorry no restaurant found !!</p>
          )}
        </div>
      </div>
    </>
  );
}
